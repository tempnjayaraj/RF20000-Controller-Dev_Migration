/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCKAUDIO_H
#define _MOCKAUDIO_H

#include "Types.h"
#include "audio.h"

void Mockaudio_Init(void);
void Mockaudio_Destroy(void);
void Mockaudio_Verify(void);




#define audio_amp_init_IgnoreAndReturn(cmock_retval) audio_amp_init_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void audio_amp_init_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
#define audio_amp_init_ExpectAndReturn(cmock_retval) audio_amp_init_CMockExpectAndReturn(__LINE__, cmock_retval)
void audio_amp_init_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
typedef uint8_t (* CMOCK_audio_amp_init_CALLBACK)(int cmock_num_calls);
void audio_amp_init_StubWithCallback(CMOCK_audio_amp_init_CALLBACK Callback);
#define LM48100Q_I2C_StartTransmission_Ignore() LM48100Q_I2C_StartTransmission_CMockIgnore(__LINE__)
void LM48100Q_I2C_StartTransmission_CMockIgnore(UNITY_LINE_TYPE cmock_line);
#define LM48100Q_I2C_StartTransmission_Expect(cmock_arg1) LM48100Q_I2C_StartTransmission_CMockExpect(__LINE__, cmock_arg1)
void LM48100Q_I2C_StartTransmission_CMockExpect(UNITY_LINE_TYPE cmock_line, uint8_t cmock_arg1);
typedef void (* CMOCK_LM48100Q_I2C_StartTransmission_CALLBACK)(uint8_t cmock_arg1, int cmock_num_calls);
void LM48100Q_I2C_StartTransmission_StubWithCallback(CMOCK_LM48100Q_I2C_StartTransmission_CALLBACK Callback);
#define audio_pwm_init_IgnoreAndReturn(cmock_retval) audio_pwm_init_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void audio_pwm_init_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
#define audio_pwm_init_ExpectAndReturn(cmock_retval) audio_pwm_init_CMockExpectAndReturn(__LINE__, cmock_retval)
void audio_pwm_init_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
typedef uint8_t (* CMOCK_audio_pwm_init_CALLBACK)(int cmock_num_calls);
void audio_pwm_init_StubWithCallback(CMOCK_audio_pwm_init_CALLBACK Callback);
#define Audio_PWM_DMA_Init_Ignore() Audio_PWM_DMA_Init_CMockIgnore(__LINE__)
void Audio_PWM_DMA_Init_CMockIgnore(UNITY_LINE_TYPE cmock_line);
#define Audio_PWM_DMA_Init_Expect() Audio_PWM_DMA_Init_CMockExpect(__LINE__)
void Audio_PWM_DMA_Init_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_Audio_PWM_DMA_Init_CALLBACK)(int cmock_num_calls);
void Audio_PWM_DMA_Init_StubWithCallback(CMOCK_Audio_PWM_DMA_Init_CALLBACK Callback);
#define poll_volume_ctrl_IgnoreAndReturn(cmock_retval) poll_volume_ctrl_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void poll_volume_ctrl_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
#define poll_volume_ctrl_ExpectAndReturn(cmock_retval) poll_volume_ctrl_CMockExpectAndReturn(__LINE__, cmock_retval)
void poll_volume_ctrl_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
typedef uint8_t (* CMOCK_poll_volume_ctrl_CALLBACK)(int cmock_num_calls);
void poll_volume_ctrl_StubWithCallback(CMOCK_poll_volume_ctrl_CALLBACK Callback);
#define audio_vol_ctrl_init_IgnoreAndReturn(cmock_retval) audio_vol_ctrl_init_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void audio_vol_ctrl_init_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
#define audio_vol_ctrl_init_ExpectAndReturn(cmock_retval) audio_vol_ctrl_init_CMockExpectAndReturn(__LINE__, cmock_retval)
void audio_vol_ctrl_init_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
typedef uint8_t (* CMOCK_audio_vol_ctrl_init_CALLBACK)(int cmock_num_calls);
void audio_vol_ctrl_init_StubWithCallback(CMOCK_audio_vol_ctrl_init_CALLBACK Callback);
#define audible_click_IgnoreAndReturn(cmock_retval) audible_click_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void audible_click_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
#define audible_click_ExpectAndReturn(cmock_retval) audible_click_CMockExpectAndReturn(__LINE__, cmock_retval)
void audible_click_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
typedef uint8_t (* CMOCK_audible_click_CALLBACK)(int cmock_num_calls);
void audible_click_StubWithCallback(CMOCK_audible_click_CALLBACK Callback);
#define audio_alarmsound_Ignore() audio_alarmsound_CMockIgnore(__LINE__)
void audio_alarmsound_CMockIgnore(UNITY_LINE_TYPE cmock_line);
#define audio_alarmsound_Expect() audio_alarmsound_CMockExpect(__LINE__)
void audio_alarmsound_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_audio_alarmsound_CALLBACK)(int cmock_num_calls);
void audio_alarmsound_StubWithCallback(CMOCK_audio_alarmsound_CALLBACK Callback);
#define reset_alarm_audio_IgnoreAndReturn(cmock_retval) reset_alarm_audio_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void reset_alarm_audio_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
#define reset_alarm_audio_ExpectAndReturn(cmock_retval) reset_alarm_audio_CMockExpectAndReturn(__LINE__, cmock_retval)
void reset_alarm_audio_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
typedef uint8_t (* CMOCK_reset_alarm_audio_CALLBACK)(int cmock_num_calls);
void reset_alarm_audio_StubWithCallback(CMOCK_reset_alarm_audio_CALLBACK Callback);
#define play_change_mode_audio_IgnoreAndReturn(cmock_retval) play_change_mode_audio_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void play_change_mode_audio_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
#define play_change_mode_audio_ExpectAndReturn(cmock_retval) play_change_mode_audio_CMockExpectAndReturn(__LINE__, cmock_retval)
void play_change_mode_audio_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
typedef uint8_t (* CMOCK_play_change_mode_audio_CALLBACK)(int cmock_num_calls);
void play_change_mode_audio_StubWithCallback(CMOCK_play_change_mode_audio_CALLBACK Callback);
#define continuous_audio_pwm_dma_init_Ignore() continuous_audio_pwm_dma_init_CMockIgnore(__LINE__)
void continuous_audio_pwm_dma_init_CMockIgnore(UNITY_LINE_TYPE cmock_line);
#define continuous_audio_pwm_dma_init_Expect(cmock_arg1) continuous_audio_pwm_dma_init_CMockExpect(__LINE__, cmock_arg1)
void continuous_audio_pwm_dma_init_CMockExpect(UNITY_LINE_TYPE cmock_line, uint16_t cmock_arg1);
typedef void (* CMOCK_continuous_audio_pwm_dma_init_CALLBACK)(uint16_t cmock_arg1, int cmock_num_calls);
void continuous_audio_pwm_dma_init_StubWithCallback(CMOCK_continuous_audio_pwm_dma_init_CALLBACK Callback);
#define set_volume_IgnoreAndReturn(cmock_retval) set_volume_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void set_volume_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
#define set_volume_ExpectAndReturn(cmock_retval) set_volume_CMockExpectAndReturn(__LINE__, cmock_retval)
void set_volume_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
typedef uint8_t (* CMOCK_set_volume_CALLBACK)(int cmock_num_calls);
void set_volume_StubWithCallback(CMOCK_set_volume_CALLBACK Callback);
#define set_lm48100q_volume_Ignore() set_lm48100q_volume_CMockIgnore(__LINE__)
void set_lm48100q_volume_CMockIgnore(UNITY_LINE_TYPE cmock_line);
#define set_lm48100q_volume_Expect(cmock_arg1) set_lm48100q_volume_CMockExpect(__LINE__, cmock_arg1)
void set_lm48100q_volume_CMockExpect(UNITY_LINE_TYPE cmock_line, uint8_t cmock_arg1);
typedef void (* CMOCK_set_lm48100q_volume_CALLBACK)(uint8_t cmock_arg1, int cmock_num_calls);
void set_lm48100q_volume_StubWithCallback(CMOCK_set_lm48100q_volume_CALLBACK Callback);
#define load_default_volume_Ignore() load_default_volume_CMockIgnore(__LINE__)
void load_default_volume_CMockIgnore(UNITY_LINE_TYPE cmock_line);
#define load_default_volume_Expect(cmock_arg1, cmock_arg2) load_default_volume_CMockExpect(__LINE__, cmock_arg1, cmock_arg2)
void load_default_volume_CMockExpect(UNITY_LINE_TYPE cmock_line, uint8_t cmock_arg1, uint8_t cmock_arg2);
typedef void (* CMOCK_load_default_volume_CALLBACK)(uint8_t cmock_arg1, uint8_t cmock_arg2, int cmock_num_calls);
void load_default_volume_StubWithCallback(CMOCK_load_default_volume_CALLBACK Callback);

#endif
