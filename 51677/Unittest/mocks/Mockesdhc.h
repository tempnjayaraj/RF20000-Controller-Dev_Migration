/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCKESDHC_H
#define _MOCKESDHC_H

#include "Types.h"
#include "esdhc.h"

void Mockesdhc_Init(void);
void Mockesdhc_Destroy(void);
void Mockesdhc_Verify(void);




#define download_sdhc_data_IgnoreAndReturn(cmock_retval) download_sdhc_data_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void download_sdhc_data_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
#define download_sdhc_data_ExpectAndReturn(cmock_retval) download_sdhc_data_CMockExpectAndReturn(__LINE__, cmock_retval)
void download_sdhc_data_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
typedef uint8_t (* CMOCK_download_sdhc_data_CALLBACK)(int cmock_num_calls);
void download_sdhc_data_StubWithCallback(CMOCK_download_sdhc_data_CALLBACK Callback);
#define esdhc_init_IgnoreAndReturn(cmock_retval) esdhc_init_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void esdhc_init_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
#define esdhc_init_ExpectAndReturn(cmock_retval) esdhc_init_CMockExpectAndReturn(__LINE__, cmock_retval)
void esdhc_init_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
typedef uint8_t (* CMOCK_esdhc_init_CALLBACK)(int cmock_num_calls);
void esdhc_init_StubWithCallback(CMOCK_esdhc_init_CALLBACK Callback);
#define sd_card_init_IgnoreAndReturn(cmock_retval) sd_card_init_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void sd_card_init_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
#define sd_card_init_ExpectAndReturn(cmock_arg1, cmock_retval) sd_card_init_CMockExpectAndReturn(__LINE__, cmock_arg1, cmock_retval)
void sd_card_init_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_arg1, uint8_t cmock_to_return);
typedef uint8_t (* CMOCK_sd_card_init_CALLBACK)(uint8_t cmock_arg1, int cmock_num_calls);
void sd_card_init_StubWithCallback(CMOCK_sd_card_init_CALLBACK Callback);
#define sd_card_init_callback_IgnoreAndReturn(cmock_retval) sd_card_init_callback_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void sd_card_init_callback_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
#define sd_card_init_callback_ExpectAndReturn(cmock_retval) sd_card_init_callback_CMockExpectAndReturn(__LINE__, cmock_retval)
void sd_card_init_callback_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
typedef uint8_t (* CMOCK_sd_card_init_callback_CALLBACK)(int cmock_num_calls);
void sd_card_init_callback_StubWithCallback(CMOCK_sd_card_init_callback_CALLBACK Callback);
#define sd_card_rw_IgnoreAndReturn(cmock_retval) sd_card_rw_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void sd_card_rw_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
#define sd_card_rw_ExpectAndReturn(cmock_retval) sd_card_rw_CMockExpectAndReturn(__LINE__, cmock_retval)
void sd_card_rw_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
typedef uint8_t (* CMOCK_sd_card_rw_CALLBACK)(int cmock_num_calls);
void sd_card_rw_StubWithCallback(CMOCK_sd_card_rw_CALLBACK Callback);
#define sd_card_log_IgnoreAndReturn(cmock_retval) sd_card_log_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void sd_card_log_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
#define sd_card_log_ExpectAndReturn(cmock_arg1, cmock_arg2, cmock_arg3, cmock_retval) sd_card_log_CMockExpectAndReturn(__LINE__, cmock_arg1, cmock_arg2, cmock_arg3, cmock_retval)
void sd_card_log_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_arg1, SDHC_LOGGING_CMDS cmock_arg2, uint8_t* cmock_arg3, uint8_t cmock_to_return);
typedef uint8_t (* CMOCK_sd_card_log_CALLBACK)(uint8_t cmock_arg1, SDHC_LOGGING_CMDS cmock_arg2, uint8_t* cmock_arg3, int cmock_num_calls);
void sd_card_log_StubWithCallback(CMOCK_sd_card_log_CALLBACK Callback);
#define log2sdhc_IgnoreAndReturn(cmock_retval) log2sdhc_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void log2sdhc_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
#define log2sdhc_ExpectAndReturn(cmock_retval) log2sdhc_CMockExpectAndReturn(__LINE__, cmock_retval)
void log2sdhc_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
typedef uint8_t (* CMOCK_log2sdhc_CALLBACK)(int cmock_num_calls);
void log2sdhc_StubWithCallback(CMOCK_log2sdhc_CALLBACK Callback);

#endif
