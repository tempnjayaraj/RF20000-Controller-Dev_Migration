/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCKCPU_H
#define _MOCKCPU_H

#include "Types.h"
#include "cpu.h"

void Mockcpu_Init(void);
void Mockcpu_Destroy(void);
void Mockcpu_Verify(void);




#define Write_Vtor_Ignore() Write_Vtor_CMockIgnore(__LINE__)
void Write_Vtor_CMockIgnore(UNITY_LINE_TYPE cmock_line);
#define Write_Vtor_Expect(cmock_arg1) Write_Vtor_CMockExpect(__LINE__, cmock_arg1)
void Write_Vtor_CMockExpect(UNITY_LINE_TYPE cmock_line, int cmock_arg1);
typedef void (* CMOCK_Write_Vtor_CALLBACK)(int cmock_arg1, int cmock_num_calls);
void Write_Vtor_StubWithCallback(CMOCK_Write_Vtor_CALLBACK Callback);
#define enable_irq_Ignore() enable_irq_CMockIgnore(__LINE__)
void enable_irq_CMockIgnore(UNITY_LINE_TYPE cmock_line);
#define enable_irq_Expect(cmock_arg1) enable_irq_CMockExpect(__LINE__, cmock_arg1)
void enable_irq_CMockExpect(UNITY_LINE_TYPE cmock_line, uint8_t cmock_arg1);
typedef void (* CMOCK_enable_irq_CALLBACK)(uint8_t cmock_arg1, int cmock_num_calls);
void enable_irq_StubWithCallback(CMOCK_enable_irq_CALLBACK Callback);
#define disable_irq_Ignore() disable_irq_CMockIgnore(__LINE__)
void disable_irq_CMockIgnore(UNITY_LINE_TYPE cmock_line);
#define disable_irq_Expect(cmock_arg1) disable_irq_CMockExpect(__LINE__, cmock_arg1)
void disable_irq_CMockExpect(UNITY_LINE_TYPE cmock_line, uint8_t cmock_arg1);
typedef void (* CMOCK_disable_irq_CALLBACK)(uint8_t cmock_arg1, int cmock_num_calls);
void disable_irq_StubWithCallback(CMOCK_disable_irq_CALLBACK Callback);
#define system_reset_IgnoreAndReturn(cmock_retval) system_reset_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void system_reset_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
#define system_reset_ExpectAndReturn(cmock_retval) system_reset_CMockExpectAndReturn(__LINE__, cmock_retval)
void system_reset_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
typedef uint8_t (* CMOCK_system_reset_CALLBACK)(int cmock_num_calls);
void system_reset_StubWithCallback(CMOCK_system_reset_CALLBACK Callback);

#endif
