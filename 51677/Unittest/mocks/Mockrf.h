/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCKRF_H
#define _MOCKRF_H

#include "Types.h"
#include "rf.h"

void Mockrf_Init(void);
void Mockrf_Destroy(void);
void Mockrf_Verify(void);




#define smartwand_pwm_init_IgnoreAndReturn(cmock_retval) smartwand_pwm_init_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void smartwand_pwm_init_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
#define smartwand_pwm_init_ExpectAndReturn(cmock_retval) smartwand_pwm_init_CMockExpectAndReturn(__LINE__, cmock_retval)
void smartwand_pwm_init_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
typedef uint8_t (* CMOCK_smartwand_pwm_init_CALLBACK)(int cmock_num_calls);
void smartwand_pwm_init_StubWithCallback(CMOCK_smartwand_pwm_init_CALLBACK Callback);
#define LegacyWand_PWMInit_Ignore() LegacyWand_PWMInit_CMockIgnore(__LINE__)
void LegacyWand_PWMInit_CMockIgnore(UNITY_LINE_TYPE cmock_line);
#define LegacyWand_PWMInit_Expect() LegacyWand_PWMInit_CMockExpect(__LINE__)
void LegacyWand_PWMInit_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_LegacyWand_PWMInit_CALLBACK)(int cmock_num_calls);
void LegacyWand_PWMInit_StubWithCallback(CMOCK_LegacyWand_PWMInit_CALLBACK Callback);
#define FTM_Init_Ignore() FTM_Init_CMockIgnore(__LINE__)
void FTM_Init_CMockIgnore(UNITY_LINE_TYPE cmock_line);
#define FTM_Init_Expect(cmock_arg1) FTM_Init_CMockExpect(__LINE__, cmock_arg1)
void FTM_Init_CMockExpect(UNITY_LINE_TYPE cmock_line, FTM_MemMapPtr cmock_arg1);
typedef void (* CMOCK_FTM_Init_CALLBACK)(FTM_MemMapPtr cmock_arg1, int cmock_num_calls);
void FTM_Init_StubWithCallback(CMOCK_FTM_Init_CALLBACK Callback);
#define FTM_Init_MANTA_Ignore() FTM_Init_MANTA_CMockIgnore(__LINE__)
void FTM_Init_MANTA_CMockIgnore(UNITY_LINE_TYPE cmock_line);
#define FTM_Init_MANTA_Expect(cmock_arg1) FTM_Init_MANTA_CMockExpect(__LINE__, cmock_arg1)
void FTM_Init_MANTA_CMockExpect(UNITY_LINE_TYPE cmock_line, FTM_MemMapPtr cmock_arg1);
typedef void (* CMOCK_FTM_Init_MANTA_CALLBACK)(FTM_MemMapPtr cmock_arg1, int cmock_num_calls);
void FTM_Init_MANTA_StubWithCallback(CMOCK_FTM_Init_MANTA_CALLBACK Callback);
#define ScopeSaver_Init_Ignore() ScopeSaver_Init_CMockIgnore(__LINE__)
void ScopeSaver_Init_CMockIgnore(UNITY_LINE_TYPE cmock_line);
#define ScopeSaver_Init_Expect(cmock_arg1, cmock_arg2) ScopeSaver_Init_CMockExpect(__LINE__, cmock_arg1, cmock_arg2)
void ScopeSaver_Init_CMockExpect(UNITY_LINE_TYPE cmock_line, CMP_MemMapPtr cmock_arg1, uint8_t cmock_arg2);
typedef void (* CMOCK_ScopeSaver_Init_CALLBACK)(CMP_MemMapPtr cmock_arg1, uint8_t cmock_arg2, int cmock_num_calls);
void ScopeSaver_Init_StubWithCallback(CMOCK_ScopeSaver_Init_CALLBACK Callback);
#define legacy_wand_scopesaver_init_Ignore() legacy_wand_scopesaver_init_CMockIgnore(__LINE__)
void legacy_wand_scopesaver_init_CMockIgnore(UNITY_LINE_TYPE cmock_line);
#define legacy_wand_scopesaver_init_Expect(cmock_arg1, cmock_arg2) legacy_wand_scopesaver_init_CMockExpect(__LINE__, cmock_arg1, cmock_arg2)
void legacy_wand_scopesaver_init_CMockExpect(UNITY_LINE_TYPE cmock_line, CMP_MemMapPtr cmock_arg1, uint8_t cmock_arg2);
typedef void (* CMOCK_legacy_wand_scopesaver_init_CALLBACK)(CMP_MemMapPtr cmock_arg1, uint8_t cmock_arg2, int cmock_num_calls);
void legacy_wand_scopesaver_init_StubWithCallback(CMOCK_legacy_wand_scopesaver_init_CALLBACK Callback);
#define IRQ_PWM_Fault_Ignore() IRQ_PWM_Fault_CMockIgnore(__LINE__)
void IRQ_PWM_Fault_CMockIgnore(UNITY_LINE_TYPE cmock_line);
#define IRQ_PWM_Fault_Expect(cmock_arg1, cmock_arg2, cmock_arg3) IRQ_PWM_Fault_CMockExpect(__LINE__, cmock_arg1, cmock_arg2, cmock_arg3)
void IRQ_PWM_Fault_CMockExpect(UNITY_LINE_TYPE cmock_line, FTM_MemMapPtr cmock_arg1, uint8_t cmock_arg2, uint8_t cmock_arg3);
typedef void (* CMOCK_IRQ_PWM_Fault_CALLBACK)(FTM_MemMapPtr cmock_arg1, uint8_t cmock_arg2, uint8_t cmock_arg3, int cmock_num_calls);
void IRQ_PWM_Fault_StubWithCallback(CMOCK_IRQ_PWM_Fault_CALLBACK Callback);
#define legacy_wand_IRQ_PWM_fault_Ignore() legacy_wand_IRQ_PWM_fault_CMockIgnore(__LINE__)
void legacy_wand_IRQ_PWM_fault_CMockIgnore(UNITY_LINE_TYPE cmock_line);
#define legacy_wand_IRQ_PWM_fault_Expect(cmock_arg1, cmock_arg2, cmock_arg3) legacy_wand_IRQ_PWM_fault_CMockExpect(__LINE__, cmock_arg1, cmock_arg2, cmock_arg3)
void legacy_wand_IRQ_PWM_fault_CMockExpect(UNITY_LINE_TYPE cmock_line, FTM_MemMapPtr cmock_arg1, uint8_t cmock_arg2, uint8_t cmock_arg3);
typedef void (* CMOCK_legacy_wand_IRQ_PWM_fault_CALLBACK)(FTM_MemMapPtr cmock_arg1, uint8_t cmock_arg2, uint8_t cmock_arg3, int cmock_num_calls);
void legacy_wand_IRQ_PWM_fault_StubWithCallback(CMOCK_legacy_wand_IRQ_PWM_fault_CALLBACK Callback);
#define PWM_SoftStart_IgnoreAndReturn(cmock_retval) PWM_SoftStart_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void PWM_SoftStart_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, bool cmock_to_return);
#define PWM_SoftStart_ExpectAndReturn(cmock_arg1, cmock_arg2, cmock_retval) PWM_SoftStart_CMockExpectAndReturn(__LINE__, cmock_arg1, cmock_arg2, cmock_retval)
void PWM_SoftStart_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, FTM_MemMapPtr cmock_arg1, uint8_t cmock_arg2, bool cmock_to_return);
typedef bool (* CMOCK_PWM_SoftStart_CALLBACK)(FTM_MemMapPtr cmock_arg1, uint8_t cmock_arg2, int cmock_num_calls);
void PWM_SoftStart_StubWithCallback(CMOCK_PWM_SoftStart_CALLBACK Callback);
#define PWM_SoftStart_DMA_Init_Ignore() PWM_SoftStart_DMA_Init_CMockIgnore(__LINE__)
void PWM_SoftStart_DMA_Init_CMockIgnore(UNITY_LINE_TYPE cmock_line);
#define PWM_SoftStart_DMA_Init_Expect(cmock_arg1, cmock_arg2, cmock_arg3) PWM_SoftStart_DMA_Init_CMockExpect(__LINE__, cmock_arg1, cmock_arg2, cmock_arg3)
void PWM_SoftStart_DMA_Init_CMockExpect(UNITY_LINE_TYPE cmock_line, uint16_t cmock_arg1, FTM_MemMapPtr cmock_arg2, uint16_t cmock_arg3);
typedef void (* CMOCK_PWM_SoftStart_DMA_Init_CALLBACK)(uint16_t cmock_arg1, FTM_MemMapPtr cmock_arg2, uint16_t cmock_arg3, int cmock_num_calls);
void PWM_SoftStart_DMA_Init_StubWithCallback(CMOCK_PWM_SoftStart_DMA_Init_CALLBACK Callback);

#endif
