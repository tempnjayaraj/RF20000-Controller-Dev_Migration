/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCKEVENT_BUFFER_H
#define _MOCKEVENT_BUFFER_H

#include "Types.h"
#include "event_buffer.h"

void Mockevent_buffer_Init(void);
void Mockevent_buffer_Destroy(void);
void Mockevent_buffer_Verify(void);




#define put_event_IgnoreAndReturn(cmock_retval) put_event_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void put_event_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
#define put_event_ExpectAndReturn(cmock_arg1, cmock_arg2, cmock_retval) put_event_CMockExpectAndReturn(__LINE__, cmock_arg1, cmock_arg2, cmock_retval)
void put_event_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, event_table* cmock_arg1, event cmock_arg2, uint8_t cmock_to_return);
typedef uint8_t (* CMOCK_put_event_CALLBACK)(event_table* cmock_arg1, event cmock_arg2, int cmock_num_calls);
void put_event_StubWithCallback(CMOCK_put_event_CALLBACK Callback);
#define get_event_IgnoreAndReturn(cmock_retval) get_event_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void get_event_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, event cmock_to_return);
#define get_event_ExpectAndReturn(cmock_arg1, cmock_retval) get_event_CMockExpectAndReturn(__LINE__, cmock_arg1, cmock_retval)
void get_event_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, event_table* cmock_arg1, event cmock_to_return);
typedef event (* CMOCK_get_event_CALLBACK)(event_table* cmock_arg1, int cmock_num_calls);
void get_event_StubWithCallback(CMOCK_get_event_CALLBACK Callback);
#define flush_buffer_Ignore() flush_buffer_CMockIgnore(__LINE__)
void flush_buffer_CMockIgnore(UNITY_LINE_TYPE cmock_line);
#define flush_buffer_Expect(cmock_arg1) flush_buffer_CMockExpect(__LINE__, cmock_arg1)
void flush_buffer_CMockExpect(UNITY_LINE_TYPE cmock_line, event_table* cmock_arg1);
typedef void (* CMOCK_flush_buffer_CALLBACK)(event_table* cmock_arg1, int cmock_num_calls);
void flush_buffer_StubWithCallback(CMOCK_flush_buffer_CALLBACK Callback);

#endif
