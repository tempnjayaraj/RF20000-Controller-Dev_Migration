/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCKLEGACY_WAND_H
#define _MOCKLEGACY_WAND_H

#include "Types.h"
#include "legacy_wand.h"

void Mocklegacy_wand_Init(void);
void Mocklegacy_wand_Destroy(void);
void Mocklegacy_wand_Verify(void);




#define legacy_wand_init_IgnoreAndReturn(cmock_retval) legacy_wand_init_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void legacy_wand_init_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
#define legacy_wand_init_ExpectAndReturn(cmock_retval) legacy_wand_init_CMockExpectAndReturn(__LINE__, cmock_retval)
void legacy_wand_init_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
typedef uint8_t (* CMOCK_legacy_wand_init_CALLBACK)(int cmock_num_calls);
void legacy_wand_init_StubWithCallback(CMOCK_legacy_wand_init_CALLBACK Callback);
#define legacy_wand_read_adc_values_IgnoreAndReturn(cmock_retval) legacy_wand_read_adc_values_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void legacy_wand_read_adc_values_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
#define legacy_wand_read_adc_values_ExpectAndReturn(cmock_retval) legacy_wand_read_adc_values_CMockExpectAndReturn(__LINE__, cmock_retval)
void legacy_wand_read_adc_values_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
typedef uint8_t (* CMOCK_legacy_wand_read_adc_values_CALLBACK)(int cmock_num_calls);
void legacy_wand_read_adc_values_StubWithCallback(CMOCK_legacy_wand_read_adc_values_CALLBACK Callback);
#define reset_therapy_settings_IgnoreAndReturn(cmock_retval) reset_therapy_settings_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void reset_therapy_settings_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
#define reset_therapy_settings_ExpectAndReturn(cmock_retval) reset_therapy_settings_CMockExpectAndReturn(__LINE__, cmock_retval)
void reset_therapy_settings_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
typedef uint8_t (* CMOCK_reset_therapy_settings_CALLBACK)(int cmock_num_calls);
void reset_therapy_settings_StubWithCallback(CMOCK_reset_therapy_settings_CALLBACK Callback);
#define increment_mode_IgnoreAndReturn(cmock_retval) increment_mode_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void increment_mode_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
#define increment_mode_ExpectAndReturn(cmock_retval) increment_mode_CMockExpectAndReturn(__LINE__, cmock_retval)
void increment_mode_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
typedef uint8_t (* CMOCK_increment_mode_CALLBACK)(int cmock_num_calls);
void increment_mode_StubWithCallback(CMOCK_increment_mode_CALLBACK Callback);
#define legacy_coag_increment_IgnoreAndReturn(cmock_retval) legacy_coag_increment_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void legacy_coag_increment_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
#define legacy_coag_increment_ExpectAndReturn(cmock_retval) legacy_coag_increment_CMockExpectAndReturn(__LINE__, cmock_retval)
void legacy_coag_increment_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
typedef uint8_t (* CMOCK_legacy_coag_increment_CALLBACK)(int cmock_num_calls);
void legacy_coag_increment_StubWithCallback(CMOCK_legacy_coag_increment_CALLBACK Callback);
#define legacy_coag_decrement_IgnoreAndReturn(cmock_retval) legacy_coag_decrement_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void legacy_coag_decrement_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
#define legacy_coag_decrement_ExpectAndReturn(cmock_retval) legacy_coag_decrement_CMockExpectAndReturn(__LINE__, cmock_retval)
void legacy_coag_decrement_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
typedef uint8_t (* CMOCK_legacy_coag_decrement_CALLBACK)(int cmock_num_calls);
void legacy_coag_decrement_StubWithCallback(CMOCK_legacy_coag_decrement_CALLBACK Callback);
#define legacy_ablate_increment_IgnoreAndReturn(cmock_retval) legacy_ablate_increment_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void legacy_ablate_increment_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
#define legacy_ablate_increment_ExpectAndReturn(cmock_retval) legacy_ablate_increment_CMockExpectAndReturn(__LINE__, cmock_retval)
void legacy_ablate_increment_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
typedef uint8_t (* CMOCK_legacy_ablate_increment_CALLBACK)(int cmock_num_calls);
void legacy_ablate_increment_StubWithCallback(CMOCK_legacy_ablate_increment_CALLBACK Callback);
#define legacy_ablate_decrement_IgnoreAndReturn(cmock_retval) legacy_ablate_decrement_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void legacy_ablate_decrement_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
#define legacy_ablate_decrement_ExpectAndReturn(cmock_retval) legacy_ablate_decrement_CMockExpectAndReturn(__LINE__, cmock_retval)
void legacy_ablate_decrement_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
typedef uint8_t (* CMOCK_legacy_ablate_decrement_CALLBACK)(int cmock_num_calls);
void legacy_ablate_decrement_StubWithCallback(CMOCK_legacy_ablate_decrement_CALLBACK Callback);
#define legacy_adc_temp_curve_fit_IgnoreAndReturn(cmock_retval) legacy_adc_temp_curve_fit_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void legacy_adc_temp_curve_fit_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
#define legacy_adc_temp_curve_fit_ExpectAndReturn(cmock_arg1, cmock_arg2, cmock_retval) legacy_adc_temp_curve_fit_CMockExpectAndReturn(__LINE__, cmock_arg1, cmock_arg2, cmock_retval)
void legacy_adc_temp_curve_fit_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, float cmock_arg1, uint8_t* cmock_arg2, uint8_t cmock_to_return);
typedef uint8_t (* CMOCK_legacy_adc_temp_curve_fit_CALLBACK)(float cmock_arg1, uint8_t* cmock_arg2, int cmock_num_calls);
void legacy_adc_temp_curve_fit_StubWithCallback(CMOCK_legacy_adc_temp_curve_fit_CALLBACK Callback);
#define legacy_wand_type_recognizer_IgnoreAndReturn(cmock_retval) legacy_wand_type_recognizer_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void legacy_wand_type_recognizer_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
#define legacy_wand_type_recognizer_ExpectAndReturn(cmock_arg1, cmock_retval) legacy_wand_type_recognizer_CMockExpectAndReturn(__LINE__, cmock_arg1, cmock_retval)
void legacy_wand_type_recognizer_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint16_t cmock_arg1, uint8_t cmock_to_return);
typedef uint8_t (* CMOCK_legacy_wand_type_recognizer_CALLBACK)(uint16_t cmock_arg1, int cmock_num_calls);
void legacy_wand_type_recognizer_StubWithCallback(CMOCK_legacy_wand_type_recognizer_CALLBACK Callback);
#define filter_adc_value_r1_IgnoreAndReturn(cmock_retval) filter_adc_value_r1_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void filter_adc_value_r1_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint16_t cmock_to_return);
#define filter_adc_value_r1_ExpectAndReturn(cmock_arg1, cmock_arg2, cmock_retval) filter_adc_value_r1_CMockExpectAndReturn(__LINE__, cmock_arg1, cmock_arg2, cmock_retval)
void filter_adc_value_r1_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint16_t* cmock_arg1, uint16_t* cmock_arg2, uint16_t cmock_to_return);
typedef uint16_t (* CMOCK_filter_adc_value_r1_CALLBACK)(uint16_t* cmock_arg1, uint16_t* cmock_arg2, int cmock_num_calls);
void filter_adc_value_r1_StubWithCallback(CMOCK_filter_adc_value_r1_CALLBACK Callback);
#define filter_adc_value_r2_IgnoreAndReturn(cmock_retval) filter_adc_value_r2_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void filter_adc_value_r2_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint16_t cmock_to_return);
#define filter_adc_value_r2_ExpectAndReturn(cmock_arg1, cmock_arg2, cmock_retval) filter_adc_value_r2_CMockExpectAndReturn(__LINE__, cmock_arg1, cmock_arg2, cmock_retval)
void filter_adc_value_r2_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint16_t* cmock_arg1, uint16_t* cmock_arg2, uint16_t cmock_to_return);
typedef uint16_t (* CMOCK_filter_adc_value_r2_CALLBACK)(uint16_t* cmock_arg1, uint16_t* cmock_arg2, int cmock_num_calls);
void filter_adc_value_r2_StubWithCallback(CMOCK_filter_adc_value_r2_CALLBACK Callback);
#define filter_temp_IgnoreAndReturn(cmock_retval) filter_temp_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void filter_temp_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
#define filter_temp_ExpectAndReturn(cmock_arg1, cmock_arg2, cmock_retval) filter_temp_CMockExpectAndReturn(__LINE__, cmock_arg1, cmock_arg2, cmock_retval)
void filter_temp_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t* cmock_arg1, uint8_t* cmock_arg2, uint8_t cmock_to_return);
typedef uint8_t (* CMOCK_filter_temp_CALLBACK)(uint8_t* cmock_arg1, uint8_t* cmock_arg2, int cmock_num_calls);
void filter_temp_StubWithCallback(CMOCK_filter_temp_CALLBACK Callback);
#define legacy_wand_button_read_IgnoreAndReturn(cmock_retval) legacy_wand_button_read_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void legacy_wand_button_read_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
#define legacy_wand_button_read_ExpectAndReturn(cmock_arg1, cmock_arg2, cmock_arg3, cmock_arg4, cmock_retval) legacy_wand_button_read_CMockExpectAndReturn(__LINE__, cmock_arg1, cmock_arg2, cmock_arg3, cmock_arg4, cmock_retval)
void legacy_wand_button_read_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint16_t cmock_arg1, uint16_t cmock_arg2, uint16_t cmock_arg3, float cmock_arg4, uint8_t cmock_to_return);
typedef uint8_t (* CMOCK_legacy_wand_button_read_CALLBACK)(uint16_t cmock_arg1, uint16_t cmock_arg2, uint16_t cmock_arg3, float cmock_arg4, int cmock_num_calls);
void legacy_wand_button_read_StubWithCallback(CMOCK_legacy_wand_button_read_CALLBACK Callback);
#define legacy_wand_use_limit_check_IgnoreAndReturn(cmock_retval) legacy_wand_use_limit_check_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void legacy_wand_use_limit_check_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, R2_TYPES cmock_to_return);
#define legacy_wand_use_limit_check_ExpectAndReturn(cmock_arg1, cmock_arg2, cmock_retval) legacy_wand_use_limit_check_CMockExpectAndReturn(__LINE__, cmock_arg1, cmock_arg2, cmock_retval)
void legacy_wand_use_limit_check_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint16_t cmock_arg1, uint16_t cmock_arg2, R2_TYPES cmock_to_return);
typedef R2_TYPES (* CMOCK_legacy_wand_use_limit_check_CALLBACK)(uint16_t cmock_arg1, uint16_t cmock_arg2, int cmock_num_calls);
void legacy_wand_use_limit_check_StubWithCallback(CMOCK_legacy_wand_use_limit_check_CALLBACK Callback);
#define legacy_wand_defaults_loader_Ignore() legacy_wand_defaults_loader_CMockIgnore(__LINE__)
void legacy_wand_defaults_loader_CMockIgnore(UNITY_LINE_TYPE cmock_line);
#define legacy_wand_defaults_loader_Expect(cmock_arg1) legacy_wand_defaults_loader_CMockExpect(__LINE__, cmock_arg1)
void legacy_wand_defaults_loader_CMockExpect(UNITY_LINE_TYPE cmock_line, uint8_t cmock_arg1);
typedef void (* CMOCK_legacy_wand_defaults_loader_CALLBACK)(uint8_t cmock_arg1, int cmock_num_calls);
void legacy_wand_defaults_loader_StubWithCallback(CMOCK_legacy_wand_defaults_loader_CALLBACK Callback);
#define equal_adc_value_IgnoreAndReturn(cmock_retval) equal_adc_value_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void equal_adc_value_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
#define equal_adc_value_ExpectAndReturn(cmock_arg1, cmock_arg2, cmock_arg3, cmock_retval) equal_adc_value_CMockExpectAndReturn(__LINE__, cmock_arg1, cmock_arg2, cmock_arg3, cmock_retval)
void equal_adc_value_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint16_t cmock_arg1, uint16_t cmock_arg2, uint16_t cmock_arg3, uint8_t cmock_to_return);
typedef uint8_t (* CMOCK_equal_adc_value_CALLBACK)(uint16_t cmock_arg1, uint16_t cmock_arg2, uint16_t cmock_arg3, int cmock_num_calls);
void equal_adc_value_StubWithCallback(CMOCK_equal_adc_value_CALLBACK Callback);
#define legacy_wand_adc_fault_IgnoreAndReturn(cmock_retval) legacy_wand_adc_fault_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void legacy_wand_adc_fault_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
#define legacy_wand_adc_fault_ExpectAndReturn(cmock_retval) legacy_wand_adc_fault_CMockExpectAndReturn(__LINE__, cmock_retval)
void legacy_wand_adc_fault_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
typedef uint8_t (* CMOCK_legacy_wand_adc_fault_CALLBACK)(int cmock_num_calls);
void legacy_wand_adc_fault_StubWithCallback(CMOCK_legacy_wand_adc_fault_CALLBACK Callback);
#define legacy_wand_unplugged_IgnoreAndReturn(cmock_retval) legacy_wand_unplugged_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void legacy_wand_unplugged_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
#define legacy_wand_unplugged_ExpectAndReturn(cmock_retval) legacy_wand_unplugged_CMockExpectAndReturn(__LINE__, cmock_retval)
void legacy_wand_unplugged_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
typedef uint8_t (* CMOCK_legacy_wand_unplugged_CALLBACK)(int cmock_num_calls);
void legacy_wand_unplugged_StubWithCallback(CMOCK_legacy_wand_unplugged_CALLBACK Callback);
#define legacy_wand_UI_state_entry_IgnoreAndReturn(cmock_retval) legacy_wand_UI_state_entry_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void legacy_wand_UI_state_entry_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
#define legacy_wand_UI_state_entry_ExpectAndReturn(cmock_retval) legacy_wand_UI_state_entry_CMockExpectAndReturn(__LINE__, cmock_retval)
void legacy_wand_UI_state_entry_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
typedef uint8_t (* CMOCK_legacy_wand_UI_state_entry_CALLBACK)(int cmock_num_calls);
void legacy_wand_UI_state_entry_StubWithCallback(CMOCK_legacy_wand_UI_state_entry_CALLBACK Callback);
#define lw_wand_switch_stuck_fault_IgnoreAndReturn(cmock_retval) lw_wand_switch_stuck_fault_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void lw_wand_switch_stuck_fault_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
#define lw_wand_switch_stuck_fault_ExpectAndReturn(cmock_retval) lw_wand_switch_stuck_fault_CMockExpectAndReturn(__LINE__, cmock_retval)
void lw_wand_switch_stuck_fault_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
typedef uint8_t (* CMOCK_lw_wand_switch_stuck_fault_CALLBACK)(int cmock_num_calls);
void lw_wand_switch_stuck_fault_StubWithCallback(CMOCK_lw_wand_switch_stuck_fault_CALLBACK Callback);
#define lw_wand_expired_error_IgnoreAndReturn(cmock_retval) lw_wand_expired_error_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void lw_wand_expired_error_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
#define lw_wand_expired_error_ExpectAndReturn(cmock_retval) lw_wand_expired_error_CMockExpectAndReturn(__LINE__, cmock_retval)
void lw_wand_expired_error_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
typedef uint8_t (* CMOCK_lw_wand_expired_error_CALLBACK)(int cmock_num_calls);
void lw_wand_expired_error_StubWithCallback(CMOCK_lw_wand_expired_error_CALLBACK Callback);
#define lw_wand_use_limit_error_IgnoreAndReturn(cmock_retval) lw_wand_use_limit_error_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void lw_wand_use_limit_error_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
#define lw_wand_use_limit_error_ExpectAndReturn(cmock_retval) lw_wand_use_limit_error_CMockExpectAndReturn(__LINE__, cmock_retval)
void lw_wand_use_limit_error_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
typedef uint8_t (* CMOCK_lw_wand_use_limit_error_CALLBACK)(int cmock_num_calls);
void lw_wand_use_limit_error_StubWithCallback(CMOCK_lw_wand_use_limit_error_CALLBACK Callback);
#define switch_to_legacy_wand_IgnoreAndReturn(cmock_retval) switch_to_legacy_wand_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void switch_to_legacy_wand_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
#define switch_to_legacy_wand_ExpectAndReturn(cmock_retval) switch_to_legacy_wand_CMockExpectAndReturn(__LINE__, cmock_retval)
void switch_to_legacy_wand_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
typedef uint8_t (* CMOCK_switch_to_legacy_wand_CALLBACK)(int cmock_num_calls);
void switch_to_legacy_wand_StubWithCallback(CMOCK_switch_to_legacy_wand_CALLBACK Callback);
#define lw_ambient_sensor_IgnoreAndReturn(cmock_retval) lw_ambient_sensor_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void lw_ambient_sensor_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
#define lw_ambient_sensor_ExpectAndReturn(cmock_retval) lw_ambient_sensor_CMockExpectAndReturn(__LINE__, cmock_retval)
void lw_ambient_sensor_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
typedef uint8_t (* CMOCK_lw_ambient_sensor_CALLBACK)(int cmock_num_calls);
void lw_ambient_sensor_StubWithCallback(CMOCK_lw_ambient_sensor_CALLBACK Callback);
#define lw_use_limit_time_loader_Ignore() lw_use_limit_time_loader_CMockIgnore(__LINE__)
void lw_use_limit_time_loader_CMockIgnore(UNITY_LINE_TYPE cmock_line);
#define lw_use_limit_time_loader_Expect(cmock_arg1, cmock_arg2) lw_use_limit_time_loader_CMockExpect(__LINE__, cmock_arg1, cmock_arg2)
void lw_use_limit_time_loader_CMockExpect(UNITY_LINE_TYPE cmock_line, R2_TYPES cmock_arg1, uint8_t cmock_arg2);
typedef void (* CMOCK_lw_use_limit_time_loader_CALLBACK)(R2_TYPES cmock_arg1, uint8_t cmock_arg2, int cmock_num_calls);
void lw_use_limit_time_loader_StubWithCallback(CMOCK_lw_use_limit_time_loader_CALLBACK Callback);
#define clear_lw_settings_IgnoreAndReturn(cmock_retval) clear_lw_settings_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void clear_lw_settings_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
#define clear_lw_settings_ExpectAndReturn(cmock_retval) clear_lw_settings_CMockExpectAndReturn(__LINE__, cmock_retval)
void clear_lw_settings_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
typedef uint8_t (* CMOCK_clear_lw_settings_CALLBACK)(int cmock_num_calls);
void clear_lw_settings_StubWithCallback(CMOCK_clear_lw_settings_CALLBACK Callback);
#define lw_disconnect_Ignore() lw_disconnect_CMockIgnore(__LINE__)
void lw_disconnect_CMockIgnore(UNITY_LINE_TYPE cmock_line);
#define lw_disconnect_Expect() lw_disconnect_CMockExpect(__LINE__)
void lw_disconnect_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_lw_disconnect_CALLBACK)(int cmock_num_calls);
void lw_disconnect_StubWithCallback(CMOCK_lw_disconnect_CALLBACK Callback);
#define compare_func_IgnoreAndReturn(cmock_retval) compare_func_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void compare_func_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define compare_func_ExpectAndReturn(val1, val2, cmock_retval) compare_func_CMockExpectAndReturn(__LINE__, val1, val2, cmock_retval)
void compare_func_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const void* val1, const void* val2, int cmock_to_return);
typedef int (* CMOCK_compare_func_CALLBACK)(const void* val1, const void* val2, int cmock_num_calls);
void compare_func_StubWithCallback(CMOCK_compare_func_CALLBACK Callback);
#define lw_get_pump_speed_IgnoreAndReturn(cmock_retval) lw_get_pump_speed_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void lw_get_pump_speed_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, float cmock_to_return);
#define lw_get_pump_speed_ExpectAndReturn(Index, cmock_retval) lw_get_pump_speed_CMockExpectAndReturn(__LINE__, Index, cmock_retval)
void lw_get_pump_speed_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, u8 Index, float cmock_to_return);
typedef float (* CMOCK_lw_get_pump_speed_CALLBACK)(u8 Index, int cmock_num_calls);
void lw_get_pump_speed_StubWithCallback(CMOCK_lw_get_pump_speed_CALLBACK Callback);
#define check_18p_fs_stuck_IgnoreAndReturn(cmock_retval) check_18p_fs_stuck_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void check_18p_fs_stuck_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
#define check_18p_fs_stuck_ExpectAndReturn(cmock_retval) check_18p_fs_stuck_CMockExpectAndReturn(__LINE__, cmock_retval)
void check_18p_fs_stuck_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
typedef uint8_t (* CMOCK_check_18p_fs_stuck_CALLBACK)(int cmock_num_calls);
void check_18p_fs_stuck_StubWithCallback(CMOCK_check_18p_fs_stuck_CALLBACK Callback);

#endif
