/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCKPOST_H
#define _MOCKPOST_H

#include "Types.h"
#include "post.h"

void Mockpost_Init(void);
void Mockpost_Destroy(void);
void Mockpost_Verify(void);




#define post_IgnoreAndReturn(cmock_retval) post_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void post_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
#define post_ExpectAndReturn(cmock_retval) post_CMockExpectAndReturn(__LINE__, cmock_retval)
void post_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
typedef uint8_t (* CMOCK_post_CALLBACK)(int cmock_num_calls);
void post_StubWithCallback(CMOCK_post_CALLBACK Callback);
#define post_init_IgnoreAndReturn(cmock_retval) post_init_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void post_init_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
#define post_init_ExpectAndReturn(cmock_retval) post_init_CMockExpectAndReturn(__LINE__, cmock_retval)
void post_init_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
typedef uint8_t (* CMOCK_post_init_CALLBACK)(int cmock_num_calls);
void post_init_StubWithCallback(CMOCK_post_init_CALLBACK Callback);
#define post_exit_IgnoreAndReturn(cmock_retval) post_exit_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void post_exit_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
#define post_exit_ExpectAndReturn(cmock_retval) post_exit_CMockExpectAndReturn(__LINE__, cmock_retval)
void post_exit_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
typedef uint8_t (* CMOCK_post_exit_CALLBACK)(int cmock_num_calls);
void post_exit_StubWithCallback(CMOCK_post_exit_CALLBACK Callback);
#define get_mfg_date_IgnoreAndReturn(cmock_retval) get_mfg_date_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void get_mfg_date_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
#define get_mfg_date_ExpectAndReturn(cmock_retval) get_mfg_date_CMockExpectAndReturn(__LINE__, cmock_retval)
void get_mfg_date_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
typedef uint8_t (* CMOCK_get_mfg_date_CALLBACK)(int cmock_num_calls);
void get_mfg_date_StubWithCallback(CMOCK_get_mfg_date_CALLBACK Callback);
#define get_serial_num_IgnoreAndReturn(cmock_retval) get_serial_num_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void get_serial_num_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
#define get_serial_num_ExpectAndReturn(cmock_retval) get_serial_num_CMockExpectAndReturn(__LINE__, cmock_retval)
void get_serial_num_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
typedef uint8_t (* CMOCK_get_serial_num_CALLBACK)(int cmock_num_calls);
void get_serial_num_StubWithCallback(CMOCK_get_serial_num_CALLBACK Callback);
#define sn_acii2bcd_Ignore() sn_acii2bcd_CMockIgnore(__LINE__)
void sn_acii2bcd_CMockIgnore(UNITY_LINE_TYPE cmock_line);
#define sn_acii2bcd_Expect(cmock_arg1, cmock_arg2) sn_acii2bcd_CMockExpect(__LINE__, cmock_arg1, cmock_arg2)
void sn_acii2bcd_CMockExpect(UNITY_LINE_TYPE cmock_line, uint8_t* cmock_arg1, uint8_t* cmock_arg2);
typedef void (* CMOCK_sn_acii2bcd_CALLBACK)(uint8_t* cmock_arg1, uint8_t* cmock_arg2, int cmock_num_calls);
void sn_acii2bcd_StubWithCallback(CMOCK_sn_acii2bcd_CALLBACK Callback);

#endif
