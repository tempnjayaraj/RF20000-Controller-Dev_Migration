/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCKSYSTICK_H
#define _MOCKSYSTICK_H

#include "Types.h"
#include "systick.h"

void Mocksystick_Init(void);
void Mocksystick_Destroy(void);
void Mocksystick_Verify(void);




#define systick_init_IgnoreAndReturn(cmock_retval) systick_init_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void systick_init_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, u8 cmock_to_return);
#define systick_init_ExpectAndReturn(cmock_retval) systick_init_CMockExpectAndReturn(__LINE__, cmock_retval)
void systick_init_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, u8 cmock_to_return);
typedef u8 (* CMOCK_systick_init_CALLBACK)(int cmock_num_calls);
void systick_init_StubWithCallback(CMOCK_systick_init_CALLBACK Callback);
#define cbtmr_isr_IgnoreAndReturn(cmock_retval) cbtmr_isr_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void cbtmr_isr_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, u8 cmock_to_return);
#define cbtmr_isr_ExpectAndReturn(cmock_retval) cbtmr_isr_CMockExpectAndReturn(__LINE__, cmock_retval)
void cbtmr_isr_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, u8 cmock_to_return);
typedef u8 (* CMOCK_cbtmr_isr_CALLBACK)(int cmock_num_calls);
void cbtmr_isr_StubWithCallback(CMOCK_cbtmr_isr_CALLBACK Callback);
#define cbtmr_reg_callback_IgnoreAndReturn(cmock_retval) cbtmr_reg_callback_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void cbtmr_reg_callback_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, ErrorStatus cmock_to_return);
#define cbtmr_reg_callback_ExpectAndReturn(cbtmr_func, cbtmr_flag, cbtmr_time_ms, cbtmr_mode, cbtmr_id, cmock_retval) cbtmr_reg_callback_CMockExpectAndReturn(__LINE__, cbtmr_func, cbtmr_flag, cbtmr_time_ms, cbtmr_mode, cbtmr_id, cmock_retval)
void cbtmr_reg_callback_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, cbtmr_func_t cbtmr_func, FlagStatus* cbtmr_flag, u32 cbtmr_time_ms, cbtmr_mode_t cbtmr_mode, u8* cbtmr_id, ErrorStatus cmock_to_return);
typedef ErrorStatus (* CMOCK_cbtmr_reg_callback_CALLBACK)(cbtmr_func_t cbtmr_func, FlagStatus* cbtmr_flag, u32 cbtmr_time_ms, cbtmr_mode_t cbtmr_mode, u8* cbtmr_id, int cmock_num_calls);
void cbtmr_reg_callback_StubWithCallback(CMOCK_cbtmr_reg_callback_CALLBACK Callback);
#define cbtmr_unreg_callback_IgnoreAndReturn(cmock_retval) cbtmr_unreg_callback_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void cbtmr_unreg_callback_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, ErrorStatus cmock_to_return);
#define cbtmr_unreg_callback_ExpectAndReturn(UnregID, cmock_retval) cbtmr_unreg_callback_CMockExpectAndReturn(__LINE__, UnregID, cmock_retval)
void cbtmr_unreg_callback_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, u8 UnregID, ErrorStatus cmock_to_return);
typedef ErrorStatus (* CMOCK_cbtmr_unreg_callback_CALLBACK)(u8 UnregID, int cmock_num_calls);
void cbtmr_unreg_callback_StubWithCallback(CMOCK_cbtmr_unreg_callback_CALLBACK Callback);

#endif
