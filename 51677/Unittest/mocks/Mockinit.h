/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCKINIT_H
#define _MOCKINIT_H

#include "Types.h"
#include "init.h"

void Mockinit_Init(void);
void Mockinit_Destroy(void);
void Mockinit_Verify(void);




#define Init_Ignore() Init_CMockIgnore(__LINE__)
void Init_CMockIgnore(UNITY_LINE_TYPE cmock_line);
#define Init_Expect() Init_CMockExpect(__LINE__)
void Init_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_Init_CALLBACK)(int cmock_num_calls);
void Init_StubWithCallback(CMOCK_Init_CALLBACK Callback);
#define Post_Ignore() Post_CMockIgnore(__LINE__)
void Post_CMockIgnore(UNITY_LINE_TYPE cmock_line);
#define Post_Expect() Post_CMockExpect(__LINE__)
void Post_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_Post_CALLBACK)(int cmock_num_calls);
void Post_StubWithCallback(CMOCK_Post_CALLBACK Callback);
#define sys_init_IgnoreAndReturn(cmock_retval) sys_init_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void sys_init_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
#define sys_init_ExpectAndReturn(cmock_retval) sys_init_CMockExpectAndReturn(__LINE__, cmock_retval)
void sys_init_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
typedef uint8_t (* CMOCK_sys_init_CALLBACK)(int cmock_num_calls);
void sys_init_StubWithCallback(CMOCK_sys_init_CALLBACK Callback);
#define init_manager_IgnoreAndReturn(cmock_retval) init_manager_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void init_manager_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
#define init_manager_ExpectAndReturn(cmock_retval) init_manager_CMockExpectAndReturn(__LINE__, cmock_retval)
void init_manager_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
typedef uint8_t (* CMOCK_init_manager_CALLBACK)(int cmock_num_calls);
void init_manager_StubWithCallback(CMOCK_init_manager_CALLBACK Callback);
#define load_default_language_IgnoreAndReturn(cmock_retval) load_default_language_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void load_default_language_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, SUPPORTED_LANGUAGES cmock_to_return);
#define load_default_language_ExpectAndReturn(cmock_arg1, cmock_retval) load_default_language_CMockExpectAndReturn(__LINE__, cmock_arg1, cmock_retval)
void load_default_language_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_arg1, SUPPORTED_LANGUAGES cmock_to_return);
typedef SUPPORTED_LANGUAGES (* CMOCK_load_default_language_CALLBACK)(uint8_t cmock_arg1, int cmock_num_calls);
void load_default_language_StubWithCallback(CMOCK_load_default_language_CALLBACK Callback);

#endif
